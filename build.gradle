buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

archivesBaseName = mod_name
group = maven_group
version = mod_version

minecraft {
    mappings channel: channel, version: channel_version
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'askway_origin'

            mods {
                askway_origin {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'askway_origin'

            mods {
                askway_origin {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'askway_origin'

            mods {
                askway_origin {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'askway_origin', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                askway_origin {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "askway.origin.refmap.json"
    config "askway.origin.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "Registrate"
        url "https://maven.tterrag.com/"
    }
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.20-1.3.3")
    jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "[MC1.20,MC1.21)")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "askway_origin",
                "Specification-Vendor"    : "DubheStudio",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Dubhe-Studio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    classifier 'slim'
}

reobf {
    jarJar { }
}

jar.finalizedBy('reobfJar')
tasks.jarJar.finalizedBy('reobfJarJar')

tasks.jarJar.configure {
    classifier ''
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:-dep-ann'
    options.compilerArgs << '-Xlint:-removal'
}
